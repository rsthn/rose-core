
(def-fn test_now
    (expect:type (datetime:now) "datetime")
)

(def-fn test_now_int
    (expect:int (datetime:now-int))
)

(def-fn test_millis
    (expect:int (datetime:millis))
)

(def-fn test_tz
    (expect:eq (datetime:tz) "UTC")
)

(def-fn test_parse_no_tz
    (expect:type
        (datetime:parse "2024-07-28 11:35:20")
        "datetime"
    )
)

;; TODO: Fix this because it's broken when there is daylight savings in the present and converting times in the past
(def-fn test_parse_tz
    (ret)
    (expect:eq
        (datetime:parse "2024-07-28 11:35:20" "UTC" "GMT-6")
        "2024-07-28 17:35:20"
    )

    (expect:eq
        (datetime:parse "2024-03-23 02:19:49" "America/New_York" "UTC")
        "2024-03-22 22:19:49"
    )
)

(def-fn test_int
    (expect:eq
        (datetime:int "2024-03-23 02:19:49")
        1711160389
    )
)

(def-fn test_date
    (expect:eq
        (datetime:date "2024-03-23 02:19:49")
        "2024-03-23"
    )
)

(def-fn test_time_without_seconds
    (expect:eq
        (datetime:time "2024-03-23 02:19:49")
        "02:19"
    )
)

(def-fn test_time_with_seconds
    (expect:eq
        (datetime:time "2024-03-23 02:19:49" true)
        "02:19:49"
    )
)

(def-fn test_date_components
    (set x (datetime "2024-06-05 19:30:25"))
    (expect:eq (x.year) 2024)
    (expect:eq (x.month) 6)
    (expect:eq (x.day) 5)
)

(def-fn test_time_components
    (set x (datetime "2024-06-05 19:30:25"))
    (expect:eq (x.hour) 19)
    (expect:eq (x.minute) 30)
    (expect:eq (x.second) 25)
)

(def-fn test_extra_components
    (set x (datetime "2024-06-05 19:30:25"))
    (expect:eq (x.week) 23)
    (expect:eq (x.weekday) 3)
)

(def-fn test_add_seconds
    (expect:eq
        (datetime:add "2024-02-01 00:20:45" 1000 "second")
        "2024-02-01 00:37:25"
    )
)

(def-fn test_add_seconds_negative
    (expect:eq
        (datetime:add "2024-02-01 00:20:45" -1000 "second")
        "2024-02-01 00:04:05"
    )
)

(def-fn test_add_minutes
    (expect:eq
        (datetime:add "2024-02-01 00:20:45" 1000 "minute")
        "2024-02-01 17:00:45"
    )
)

(def-fn test_add_minutes_negative
    (expect:eq
        (datetime:add "2024-02-01 00:20:45" -1000 "minute")
        "2024-01-31 07:40:45"
    )
)

(def-fn test_add_hours
    (expect:eq
        (datetime:add "2024-02-01 00:20:45" 1000 "hour")
        "2024-03-13 16:20:45"
    )
)

(def-fn test_add_hours_negative
    (expect:eq
        (datetime:add "2024-02-01 00:20:45" -1000 "hour")
        "2023-12-21 08:20:45"
    )
)

(def-fn test_add_days
    (expect:eq
        (datetime:add "2024-02-01 00:20:45" 1000 "day")
        "2026-10-28 00:20:45"
    )
)

(def-fn test_add_days_negative
    (expect:eq
        (datetime:add "2024-02-01 00:20:45" -216 "day")
        "2023-06-30 00:20:45"
    )
)

(def-fn test_add_weeks
    (expect:eq
        (datetime:add "2024-01-01 00:20:45" 52 "week")
        "2024-12-30 00:20:45"
    )
)

(def-fn test_add_weeks_negative
    (expect:eq
        (datetime:add "2024-03-07 00:20:45" -10 "week")
        "2023-12-28 00:20:45"
    )
)

(def-fn test_add_months
    (expect:eq
        (datetime:add "2024-01-01 00:20:45" 31 "month")
        "2026-08-01 00:20:45"
    )
)

(def-fn test_add_months_negative
    (expect:eq
        (datetime:add "2024-03-07 00:20:45" -17 "month")
        "2022-10-07 00:20:45"
    )
)

(def-fn test_add_years
    (expect:eq
        (datetime:add "2024-01-01 00:20:45" 5 "year")
        "2029-01-01 00:20:45"
    )
)

(def-fn test_add_years_negative
    (expect:eq
        (datetime:add "2024-03-07 00:20:45" -3 "year")
        "2021-03-07 00:20:45"
    )
)

(def-fn test_sub_seconds
    (expect:eq
        (datetime:sub "2024-02-01 00:20:45" "2024-02-01 00:37:25" "second")
        -1000
    )

    (expect:eq
        (datetime:sub "2024-02-01 00:20:45" "2024-02-01 00:04:05" "second")
        1000
    )
)

(def-fn test_sub_minutes
    (expect:eq
        (datetime:sub "2024-02-01 00:20:45" "2024-02-01 17:00:45" "minute")
        -1000
    )

    (expect:eq
        (datetime:sub "2024-02-01 00:20:45" "2024-01-31 07:40:45" "minute")
        1000
    )
)

(def-fn test_sub_hours
    (expect:eq
        (datetime:sub "2024-02-01 00:20:45" "2024-03-13 16:20:45" "hour")
        -1000
    )

    (expect:eq
        (datetime:sub "2024-02-01 00:20:45" "2023-12-21 08:20:45" "hour")
        1000
    )
)

(def-fn test_sub_days
    (expect:eq
        (datetime:sub "2024-02-01 00:20:45" "2026-10-28 00:20:45" "day")
        -1000
    )

    (expect:eq
        (datetime:sub "2024-02-01 00:20:45" "2023-06-30 00:20:45" "day")
        216
    )
)

(def-fn test_sub_weeks
    (expect:eq
        (datetime:sub "2024-01-01 00:20:45" "2024-12-30 00:20:45" "week")
        -52
    )

    (expect:eq
        (datetime:sub "2024-03-07 00:20:45" "2023-12-28 00:20:45" "week")
        10
    )
)

(def-fn test_sub_months
    (expect:eq
        (datetime:sub "2024-01-01 00:20:45" "2029-08-01 00:20:45" "month")
        -67
    )

    (expect:eq
        (datetime:sub "2029-08-01 00:20:45" "2024-01-01 00:20:45" "month")
        67
    )
)

(def-fn test_sub_years
    (expect:eq
        (datetime:sub "2024-01-01 00:20:45" "2029-01-01 00:20:45" "year")
        -5
    )

    (expect:eq
        (datetime:sub "2024-03-07 00:20:45" "2021-03-07 00:20:45" "year")
        3
    )
)

(def-fn test_diff_seconds
    (expect:eq
        (datetime:diff "2024-02-01 00:20:45" "2024-02-01 00:37:25" "second")
        1000
    )

    (expect:eq
        (datetime:diff "2024-02-01 00:20:45" "2024-02-01 00:04:05" "second")
        1000
    )
)

(def-fn test_diff_minutes
    (expect:eq
        (datetime:diff "2024-02-01 00:20:45" "2024-02-01 17:00:45" "minute")
        1000
    )

    (expect:eq
        (datetime:diff "2024-02-01 00:20:45" "2024-01-31 07:40:45" "minute")
        1000
    )
)

(def-fn test_diff_hours
    (expect:eq
        (datetime:diff "2024-02-01 00:20:45" "2024-03-13 16:20:45" "hour")
        1000
    )

    (expect:eq
        (datetime:diff "2024-02-01 00:20:45" "2023-12-21 08:20:45" "hour")
        1000
    )
)

(def-fn test_diff_days
    (expect:eq
        (datetime:diff "2024-02-01 00:20:45" "2026-10-28 00:20:45" "day")
        1000
    )

    (expect:eq
        (datetime:diff "2024-02-01 00:20:45" "2023-06-30 00:20:45" "day")
        216
    )
)

(def-fn test_diff_weeks
    (expect:eq
        (datetime:diff "2024-01-01 00:20:45" "2024-12-30 00:20:45" "week")
        52
    )

    (expect:eq
        (datetime:diff "2024-03-07 00:20:45" "2023-12-28 00:20:45" "week")
        10
    )
)

(def-fn test_diff_months
    (expect:eq
        (datetime:diff "2024-01-01 00:20:45" "2029-08-01 00:20:45" "month")
        67
    )

    (expect:eq
        (datetime:diff "2029-08-01 00:20:45" "2024-01-01 00:20:45" "month")
        67
    )
)

(def-fn test_diff_years
    (expect:eq
        (datetime:diff "2024-01-01 00:20:45" "2029-01-01 00:20:45" "year")
        5
    )

    (expect:eq
        (datetime:diff "2024-03-07 00:20:45" "2021-03-07 00:20:45" "year")
        3
    )
)

(def-fn test_format
    (expect:eq
        (datetime:format "2024-03-23 02:19:49" "%Y-%m-%d")
        "2024-03-23"
    )

    (expect:eq
        (datetime:format "2024-03-23 02:19:49" "%a %A %e %u %w %W")
        "Sat Saturday 23 6 6 12"
    )

    (expect:eq
        (datetime:format "2024-03-23 02:19:49" "%b %B %h %n %y")
        "Mar March Mar 3 24"
    )

    (expect:eq
        (datetime:format "2024-03-23 02:19:49" "%H %k %I %l %M %S %s %p %P")
        "02 2 02 2 19 49 rd AM am"
    )
)
